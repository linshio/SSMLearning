<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.linshio.mapper.DynamicSQLMapper">
    <select id="getEmpByConditionOne" resultType="cn.linshio.pojo.Emp">
        select *
        from t_emp
        <where>
            <if test="empName != null and empName != ''">
                emp_Name = #{empName}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="gender != null and gender != ''">
                and gender = #{gender}
            </if>
        </where>
    </select>

    <select id="getEmpByConditionTwo" resultType="cn.linshio.pojo.Emp">
        select *
        from t_emp
        <!--trim属性：
            prefix与suffix 表示在标签的内容前面或者后面添加内容
            prefixOverrides与suffixOverrides 表示在标签的内容前面或者后面去掉内容
        -->
        <trim prefix="where" suffixOverrides="and">
            <if test="empName != null and empName != ''">
                emp_Name = #{empName} and
            </if>
            <if test="age != null">
                age = #{age} and
            </if>
            <if test="gender != null and gender != ''">
                gender = #{gender}
            </if>
        </trim>
    </select>

    <sql id="empColumns">
        emp_id,emp_name,age,gender,dept_id
    </sql>

    <select id="getEmpByCondition" resultType="cn.linshio.pojo.Emp">
        select
        <include refid="empColumns"/>
        from t_emp
        <where>
            <choose>
                <when test="empName != null and empName != ''">
                    emp_Name = #{empName}
                </when>
                <when test="age != null">
                    age = #{age}
                </when>
                <when test="gender != null and gender != ''">
                    gender = #{gender}
                </when>
            </choose>
        </where>
    </select>

    <insert id="insertMoreEmp">
        insert into t_emp (emp_id, emp_name, age, gender, dept_id)
        values
        <foreach collection="emps" item="emp" separator=",">
            (null,#{emp.empName},#{emp.age},#{emp.gender},null)
        </foreach>
    </insert>

    <delete id="deleteMoreEmpOne">
        delete
        from t_emp
        where emp_id in
        <foreach collection="empIds" item="empId" separator="," open="(" close=")">
            #{empId}
        </foreach>
    </delete>

    <delete id="deleteMoreEmp">
        delete
        from t_emp
        where
        <foreach collection="empIds" item="empId" separator="or">
            emp_id = #{empId}
        </foreach>
    </delete>
</mapper>